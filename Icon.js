/* eslint-disable */
// Generated by gulp svg-icon - do not modify manually

import React, {Component} from 'react';
import PropTypes from 'prop-types';
import {View, Text as NativeText} from 'react-native';
import Svg, {
  Circle,
  Defs,
  Ellipse,
  G,
  Line,
  LinearGradient,
  Path,
  Polygon,
  Polyline,
  RadialGradient,
  Rect,
  Stop,
  Symbol,
  Text,
  Use
} from 'react-native-svg';

const iconList = [
  'chevron_down',
  'chevron_up',
];

export default class Icon extends Component {

  static propTypes = {
    color: PropTypes.string,
    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    kind: PropTypes.oneOf([
      'chevron_down',
      'chevron_up',
    ]).isRequired,
    preview: PropTypes.bool,
    size: PropTypes.number,
    style: View.propTypes.style,
    wrapperStyle: View.propTypes.style,
  };

  static defaultProps = {
    color: '#000',
    size: 32
  }

  render() {
    const {kind, preview} = this.props;

    return preview ?
      this.renderPreview() :
      this.renderIcon(kind);
  }

  renderPreview() {
    return (
      <View>
        {iconList.map(kind => this.renderPreviewKind(kind))}
      </View>
    );
  }

  renderIcon(kind) {
    const {wrapperStyle} = this.props;

    if (wrapperStyle)
      return <View style={wrapperStyle}>{this.getIcon(kind)}</View>;

    return this.getIcon(kind);
  }

  renderPreviewKind(kind) {
    return (
      <View key={kind}>
        <NativeText>&lt;Icon kind="{kind}" /&gt;</NativeText>
        {this.renderIcon(kind)}
      </View>
    );
  }

  getIcon(kind) {
    const {height, color, size, style, width} = this.props;

    switch (kind) {
      default: return null;
      case ('chevron_down'): return (<Svg height={height || size} width={width || size} style={style} viewBox="0 0 25 25"><Path fill={color} d="M21.579 5.74l-9.078 9.08-7.86-7.858L2.609 4.93.168 7.62l12.333 12.452L24.832 7.62l-2.439-2.692z"/></Svg>);
      case ('chevron_up'): return (<Svg height={height || size} width={width || size} style={style} viewBox="0 0 25 25"><Path fill={color} d="M3.421 19.26l9.078-9.08 7.859 7.858 2.033 2.032 2.441-2.69L12.499 4.928.168 17.38l2.439 2.692z"/></Svg>);
      }
  }
}
